body_mass_g  > 3700,
sex != is.na())
penguins %>%
filter(
body_mass_g  > 3700,
sex != is.na())
penguins %>%
select(body_mass_g, sex) %>%
filter(
body_mass_g  > 3700,
sex != is.na())
penguins %>%
filter(
body_mass_g  > 3700,
sex != is.na(.x))
penguins %>%
filter(
body_mass_g  > 3700,
sex != is.na(sex))
penguins %>%
filter(
body_mass_g  > 3700,
is.na(sex))
penguins %>%
filter(
body_mass_g  > 3700,
sex !=is.na(sex))
penguins %>%
filter(
body_mass_g  > 3700,
is.na(sex))
penguins
penguins%>%
filter(
body_mass_g  > 3700)
penguins %>%
filter(
bill_length_mm > 39,
species  %in% c("Adelie", "Gentoo")
penguins %>%
penguins %>%
filter(
species  %in% c("Adelie", "Gentoo"))
penguins%>%
mutate(
class_poids   = cut(body_mass_g ,
breaks = c(-Inf, 3500 , 4700, +Inf),
labels = c("leger", "moyen", "lourd")
)
)
penguins%>%
mutate(
class_poids   = cut(body_mass_g ,
breaks = c(-Inf, 3500 , 4700, +Inf),
labels = c("leger", "moyen", "lourd")
)
)
count(dat, class_poids)
count(penguins, class_poids)
penguins <-penguins%>%
mutate(
class_poids   = cut(body_mass_g ,
breaks = c(-Inf, 3500 , 4700, +Inf),
labels = c("leger", "moyen", "lourd")
)
)
penguins <-penguins%>%
mutate(
class_poids   = cut(body_mass_g ,
breaks = c(-Inf, 3500 , 4700, +Inf),
labels = c("leger", "moyen", "lourd")
)
)
count(penguins, class_poids)
penguins <-penguins%>%
mutate(
class_poids   = cut(body_mass_g ,
breaks = c(-Inf, 3500 , 4700, +Inf),
labels = c("leger", "moyen", "lourd")
)
)
datamart <- penguins %>%
select(species, bill_length_mm, sex, year)
datamart
penguins %>%
filter(
species  %in% c("Adelie", "Gentoo"))
penguins%>%
mutate(
sex2   =  stringr::str_sub(sex,1)
)
)
penguins%>%
mutate(
sex2   =  stringr::str_sub(sex,1)
)
penguins%>%
mutate(
sex2   =  stringr::str_sub(sex,1)
)
penguins%>%
mutate(
sex2   =  stringr::str_sub(sex,0,1)
)
penguins <-penguins%>%
mutate(
sex2   =  stringr::str_sub(sex,0,1)
)
penguins
penguins <-penguins%>%
mutate(
sex   =  stringr::str_sub(sex,0,1)
)
penguins
count(penguins, class_poids)
mutate(penguins,
sex   =  stringr::str_sub(sex,0,1)
)
mutate(penguins,
sex   =  stringr::str_sub(sex,0,1)
)
mutate(penguins,
sex3   =  stringr::str_sub(sex,0,1)
)
mutate(penguins,
sex3   =  stringr::str_sub(sex,0,1)
)
penguins
orthodont <- readRDS( "data/orthodont.RDS" )
orthodont <- readRDS( "donnees/orthodont.RDS" )
orthodont
orthodont <- separate(orthodont, col = "sub_sex", into = c("subject", "genre"))
orthodont
orthodont %>%
pivot_longer(
cols = -all_of(c("subject", "genre")),
names_to = "age", values_to = "measure"
)
my_data <- read_csv(file = "data/climate.csv")
my_data <- read_csv(file = "donnees/climate.csv")
my_data
my_data %>%
pivot_wider(
names_from = "mesure",
values_from = "value")
# 6.3 Gestion des valeurs manquantes
airquality
drop_na(airquality, Ozone)
drop_na(airquality, any_of(c("Ozone", "Temp")))
drop_na(airquality, matches("zone$"))
replace_na(airquality, list(Ozone = 0, Solar.R = -1))
ens.csv")
dataset
dataset <- readr::read_csv(file = "data/echanges_biens.csv")
dataset <- readr::read_csv(file = "donnees/echanges_biens.csv")
dataset <- readr::read_csv(file = "donnees/echanges_biens.csv")
dataset
dat <- expand(dataset, LOCATION, TIME)
dat
full_dataset <- complete(dataset, LOCATION, TIME, fill = list(Value = 0))
full_dataset
T1 <- read_csv( "donnees/T1.csv" )
T1
T1
data_nuances <-   select(T1, Code département, circonscription, ends_with(nuances))
data_nuances <-   select(T1, "Code département", circonscription, ends_with(nuances))
data_nuances <-   select(T1, "Code département", circonscription, ends_with(nuance))
data_nuances <-   select(T1, "Code département", circonscription, ends_with("nuance"))
data_nuances
data_nuances %>%
pivot_longer(
cols = -all_of(c("Code département", "circonscription")),
names_to = "nuance", values_to = "measure"
)
data_nuances <- separate(data_nuances, col = "nuance", into = c("id", "dummy"))
data_nuances <- data_nuances %>%
pivot_longer(
cols = -all_of(c("Code département", "circonscription")),
names_to = "nuance", values_to = "measure"
)
data_nuances
data_nuances <- separate(data_nuances, col = "nuance", into = c("id", "dummy"))
data_nuances
drop_na(data_nuances)
data_nuances
nuances
nuances <-drop_na(data_nuances)
nuances
data_scores <-   select(T1, "Code département", circonscription, ends_with("voix"))
data_scores
data_scores <- data_scores %>%
pivot_longer(
cols = -all_of(c("Code département", "circonscription")),
names_to = "voix", values_to = "measure"
)
data_scores
data_scores <- separate(data_scores, col = "voix", into = c("id", "dummy"))
data_scores
scores <-drop_na(data_scores)
scores
?rename
rename(scores, measure = voix)
rename(scores, voix=measure)
rename(nuances, nuance=measure)
?merge
result <-merge(all.nuances = FALSE, all.scores = FALSE)
result <-merge(scores, nuance,all.x = FALSE, all.y = FALSE)
result <-merge(scores, nuances,all.x = FALSE, all.y = FALSE)
result
scores
scores <-rename(scores, voix=measure)
scores
nuances <-rename(nuances, nuance=measure)
nuances
result <-merge(scores, nuances,all.x = FALSE, all.y = FALSE)
result
nuances
?drop
nuances <-select(nuances, -dummy)
nuances
scores <-select(scores, -dummy)
scores
result <-merge(scores, nuances,all.x = FALSE, all.y = FALSE)
result
View(nuances)
producers <- data.frame(
surname = c(
"Spielberg", "Scorsese", "Hitchcock",
"Tarantino", "Audiard", "Tony Scott"
),
nationality = c("US", "US", "UK", "US", "FR", "US"),
stringsAsFactors = FALSE
)
producers
movies <- data.frame(
surname = c(
"Spielberg",
"Scorsese",
"Hitchcock",
"Hitchcock",
"Spielberg",
"Tarantino",
"Audiard",
"Tony Gatlif"
),
title = c(
"Super 8",
"Taxi Driver",
"Psycho",
"North by Northwest",
"Catch Me If You Can",
"Reservoir Dogs",
"De battre mon coeur s'est arrêté",
"Exils"
),
stringsAsFactors = FALSE
)
movies
left_join(producers, movies, by = "surname")
inner_join(producers, movies, by = "surname")
right_join(producers, movies, by = "surname")
full_join(producers, movies, by = "surname")
semi_join(producers, movies, by = "surname")
anti_join(producers, movies, by = "surname")
summarise(penguins, nb_lignes = n())
dat
dat <- group_by(penguins, species)
dat
summarise(
.data = dat,
n = n(),
avg = mean(bill_length_mm, na.rm = TRUE)
)
dat <- penguins %>%
group_by(species, island, sex) %>%
summarise(bill_length_mm = mean(bill_length_mm, na.rm = TRUE),
body_mass_g = mean(body_mass_g, na.rm = TRUE)
)
## `summarise()` has grouped output by 'species', 'island'. You can override using
## the `.groups` argument.
dat <- penguins %>%
group_by(species, island, sex) %>%
summarise(bill_length_mm = mean(bill_length_mm, na.rm = TRUE),
body_mass_g = mean(body_mass_g, na.rm = TRUE)
)
dat %>%
arrange(desc(body_mass_g)) %>%
filter(row_number() ==1)
penguins %>%
group_by(species, island, sex) %>%
summarise(bill_length_mm = mean(bill_length_mm, na.rm = TRUE),
body_mass_g = mean(body_mass_g, na.rm = TRUE),
.groups = "drop"
) %>%
arrange(desc(body_mass_g)) %>%
filter(row_number() ==1)
penguins %>%
group_by(species, island, sex) %>%
summarise(bill_length_mm = mean(bill_length_mm, na.rm = TRUE),
body_mass_g = mean(body_mass_g, na.rm = TRUE),
.groups = "drop"
) %>%
arrange(desc(body_mass_g)) %>%
filter(row_number() ==1)
centre_reduit <- function(x) {
(x - mean(x, na.rm = TRUE)) / sd(x, na.rm = TRUE)
}
penguins %>%
group_by(species, sex) %>%
mutate(n = n(),
rank = percent_rank(bill_length_mm),
z = centre_reduit(bill_length_mm)) %>%
ungroup() %>%
arrange(rank, z) %>%
centre_reduit <- function(x) {
(x - mean(x, na.rm = TRUE)) / sd(x, na.rm = TRUE)
}
centre_reduit <- function(x) {
(x - mean(x, na.rm = TRUE)) / sd(x, na.rm = TRUE)
}
penguins %>%
group_by(species, sex) %>%
mutate(n = n(),
rank = percent_rank(bill_length_mm),
z = centre_reduit(bill_length_mm)) %>%
ungroup() %>%
arrange(rank, z) %>%
select(species, sex, n, rank, z)
penguins %>%
group_by(species, island) %>%
arrange(desc(body_mass_g)) %>%
filter(row_number() < 4) %>%
ungroup()
penguins %>%
select(species, island, bill_length_mm, bill_depth_mm) %>%
filter(between(bill_length_mm, left = 39.1, right = 40),
between(bill_depth_mm, left = 20, right = 22)
)
dat <- data.frame(
a = c("A", NA, "B", NA, NA),
b = c("B", "C", "C", "D", NA),
c = c(NA, NA, NA, NA, "E")
) %>% mutate(z = coalesce(a, b, c))
dat <- data.frame(
a = c("A", NA, "B", NA, NA),
b = c("B", "C", "C", "D", NA),
c = c(NA, NA, NA, NA, "E")
) %>% mutate(z = coalesce(a, b, c))
dat_1 <- data.frame(
a = 1:2,
b = rnorm(2),
group = "un"
)
dat_2 <- data.frame(
a = 11:13,
b = rnorm(3),
group = "deux"
)
dat_3 <- data.frame(
a = 21:27,
b = rnorm(7),
group = "trois"
)
dat <- bind_rows(dat_1, dat_2, dat_3)
dat
dat <- data.frame(
a = c("A", NA, "B", NA, NA),
b = c("B", "C", "C", "D", NA),
c = c(NA, NA, NA, NA, "E")
) %>% mutate(z = coalesce(a, b, c))
z
dat
?read_delim
label_A129  <- read_delim( "donnees/Libelle_A129.txt", col_names	="code_A129""label_A129")
label_A129  <- read_delim( "donnees/Libelle_A129.txt")
label_A129
label_A129  <- read_delim( "donnees/Libelle_A129.txt" , col_names("code_A129""label_A129")
label_A129  <- read_delim( "donnees/Libelle_A129.txt" , col_names("code_A129","label_A129")
)
label_A129  <- read_delim( "donnees/Libelle_A129.txt" , col_names("code_A129","label_A129"))
label_A129  <- read_delim( "donnees/Libelle_A129.txt" , header=TRUE)
label_A129  <- read_delim( "donnees/Libelle_A129.txt" , header=TRUE)
label_A129  <- read_delim( "donnees/Libelle_A129.txt" , header=FALSE)
label_A129  <- read_delim( "donnees/Libelle_A129.txt" , col_select(1:2))
label_A129  <- read_delim( "donnees/Libelle_A129.txt")
label_A129
label_A129  <- read_delim( "donnees/Libelle_A129.txt", col_select(1))
label_A129  <- read_csv( "donnees/Libelle_A129.txt")
label_A129
?read_csv
label_A129  <- read_delim( "donnees/Libelle_A129.txt", col_select = TRUE)
label_A129  <- read_delim( "donnees/Libelle_A129.txt", col_select = 1:2)
label_A129
label_A129_name<- c("code_A129", "label_A129")
label_A129  <- read_delim( "donnees/Libelle_A129.txt", col_select = 1:2, col_names = label_A129_name)
label_A129
label_A129  <- read_delim( "donnees/Libelle_A129.txt",
col_select = 1:2,
col_names = label_A129_name
col_types = cols(
label_A129  <- read_delim( "donnees/Libelle_A129.txt",
col_select = 1:2,
col_names = label_A129_name,
col_types = cols(
code_A129=col_character()
label_A129=col_character()
label_A129  <- read_delim( "donnees/Libelle_A129.txt",
col_select = 1:2,
col_names = label_A129_name,
col_types = cols(
code_A129=col_character(),
label_A129=col_character()
))
label_A129
label_CPF4_name<- c("code_CPF4", "label_CPF4")
label_CPF4  <- read_delim( "donnees/Libelle_A129.txt",
col_select = 1:2,
col_names = label_CPF4_name,
col_types = cols(
code_CPF4=col_character(),
label_CPF4=col_character()
))
label_CPF4
label_PAYS_name<- c("code_pays", "label_pays")
label_PAYS  <- read_delim( "donnees/Libelle_A129.txt",
col_select = 1:2,
col_names = label_PAYS_name,
col_types = cols(
code_pays=col_character(),
label_pays=col_character()
))
label_PAYS
label_CPF4_name<- c("code_CPF4", "label_CPF4")
label_CPF4  <- read_delim( "donnees/Libelle_CPF4.txt",
col_select = 1:2,
col_names = label_CPF4_name,
col_types = cols(
code_CPF4=col_character(),
label_CPF4=col_character()
))
label_CPF4
label_PAYS_name<- c("code_pays", "label_pays")
label_PAYS  <- read_delim( "donnees/Libelle_PAYS.txt",
col_select = 1:2,
col_names = label_PAYS_name,
col_types = cols(
code_pays=col_character(),
label_pays=col_character()
))
label_PAYS
?col_character
export_2019_name <-c( "trimestre", "annee", "code_dep", "code_reg", "code_A129", "code_CPF4", "code_pays", "valeur_exp", "masse_exp")
export_2019  <- read_delim( "donnees/Region_2019_Export.txt",
col_select = 2:9,
col_names = export_2019_name)
export_2019
?cols
export_2019  <- read_delim( "donnees/Region_2019_Export.txt",
col_select = 2:9,
col_names = export_2019_name,
col_types = col_character(1,2)
))
export_2019  <- read_delim( "donnees/Region_2019_Export.txt",
col_select = 2:9,
col_names = export_2019_name,
col_types = col_character(1,2)
)
export_2019  <- read_delim( "donnees/Region_2019_Export.txt",
col_select = 2:9,
col_names = export_2019_name,
col_types = col_character(1:2)
)
export_2019  <- read_delim( "donnees/Region_2019_Export.txt",
col_select = 2:9,
col_names = export_2019_name,
col_types = col_character(export_2019_name)
)
export_2019  <- read_delim( "donnees/Region_2019_Export.txt",
col_select = 1:9,
col_names = export_2019_name,
col_types = cols(
flux=col_skip()
code_dep=col_character(),
export_2019  <- read_delim( "donnees/Region_2019_Export.txt",
col_select = 1:9,
col_names = export_2019_name,
col_types = cols(
flux=col_skip(),
code_dep=col_character(),
code_reg=col_character(),
code_A129 =col_character(),
code_CPF4=col_character(),
code_dep=col_character(),
))
export_2019
import_2019  <- read_delim( "donnees/Region_2019_Import.txt",
col_select = 1:9,
col_names = export_2019_name,
col_types = cols(
flux=col_skip(),
code_dep=col_character(),
code_reg=col_character(),
code_A129 =col_character(),
code_CPF4=col_character(),
code_dep=col_character(),
))
import_2019
?intersect
intersect(export_2019,import_2019)
intersect(colnames(export_2019,import_2019))#???????????
intersect(export_2019,import_2019) #???????????
intersect(colnames(export_2019),colnames(import_2019)) #???????????
